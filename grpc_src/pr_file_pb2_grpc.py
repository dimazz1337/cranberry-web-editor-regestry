# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpc_src.pr_file_pb2 as pr__file__pb2


class ControllerAppStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Auth = channel.unary_unary(
                '/cmd.ControllerApp/Auth',
                request_serializer=pr__file__pb2.authInfo.SerializeToString,
                response_deserializer=pr__file__pb2.authInfoResponse.FromString,
                )
        self.GetFullInfo = channel.unary_unary(
                '/cmd.ControllerApp/GetFullInfo',
                request_serializer=pr__file__pb2.RequestGetFullInfo.SerializeToString,
                response_deserializer=pr__file__pb2.GetFullInfoResponse.FromString,
                )
        self.GetInfo = channel.unary_unary(
                '/cmd.ControllerApp/GetInfo',
                request_serializer=pr__file__pb2.RequestGetInfo.SerializeToString,
                response_deserializer=pr__file__pb2.GetInfoResponse.FromString,
                )
        self.AddNewInfo = channel.unary_unary(
                '/cmd.ControllerApp/AddNewInfo',
                request_serializer=pr__file__pb2.RequestAddNewInfo.SerializeToString,
                response_deserializer=pr__file__pb2.AddNewInfoResponse.FromString,
                )
        self.ChangeRoute = channel.unary_unary(
                '/cmd.ControllerApp/ChangeRoute',
                request_serializer=pr__file__pb2.RequestChangeRoute.SerializeToString,
                response_deserializer=pr__file__pb2.ChangeRouteResponse.FromString,
                )
        self.OpenShift = channel.unary_unary(
                '/cmd.ControllerApp/OpenShift',
                request_serializer=pr__file__pb2.RequestOpenShift.SerializeToString,
                response_deserializer=pr__file__pb2.OpenShiftResponse.FromString,
                )
        self.CloseShift = channel.unary_unary(
                '/cmd.ControllerApp/CloseShift',
                request_serializer=pr__file__pb2.RequestCloseShift.SerializeToString,
                response_deserializer=pr__file__pb2.CloseShiftResponse.FromString,
                )
        self.AddStatistic = channel.unary_unary(
                '/cmd.ControllerApp/AddStatistic',
                request_serializer=pr__file__pb2.RequestAddStatistic.SerializeToString,
                response_deserializer=pr__file__pb2.AddStatisticResponse.FromString,
                )
        self.MakeComplaint = channel.unary_unary(
                '/cmd.ControllerApp/MakeComplaint',
                request_serializer=pr__file__pb2.RequestMakeComplaint.SerializeToString,
                response_deserializer=pr__file__pb2.complaintResponse.FromString,
                )
        self.GetTable = channel.unary_unary(
                '/cmd.ControllerApp/GetTable',
                request_serializer=pr__file__pb2.RequestGetTable.SerializeToString,
                response_deserializer=pr__file__pb2.GetTableResponse.FromString,
                )


class ControllerAppServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Auth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFullInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddNewInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenShift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseShift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddStatistic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeComplaint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ControllerAppServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Auth': grpc.unary_unary_rpc_method_handler(
                    servicer.Auth,
                    request_deserializer=pr__file__pb2.authInfo.FromString,
                    response_serializer=pr__file__pb2.authInfoResponse.SerializeToString,
            ),
            'GetFullInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFullInfo,
                    request_deserializer=pr__file__pb2.RequestGetFullInfo.FromString,
                    response_serializer=pr__file__pb2.GetFullInfoResponse.SerializeToString,
            ),
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=pr__file__pb2.RequestGetInfo.FromString,
                    response_serializer=pr__file__pb2.GetInfoResponse.SerializeToString,
            ),
            'AddNewInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.AddNewInfo,
                    request_deserializer=pr__file__pb2.RequestAddNewInfo.FromString,
                    response_serializer=pr__file__pb2.AddNewInfoResponse.SerializeToString,
            ),
            'ChangeRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeRoute,
                    request_deserializer=pr__file__pb2.RequestChangeRoute.FromString,
                    response_serializer=pr__file__pb2.ChangeRouteResponse.SerializeToString,
            ),
            'OpenShift': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenShift,
                    request_deserializer=pr__file__pb2.RequestOpenShift.FromString,
                    response_serializer=pr__file__pb2.OpenShiftResponse.SerializeToString,
            ),
            'CloseShift': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseShift,
                    request_deserializer=pr__file__pb2.RequestCloseShift.FromString,
                    response_serializer=pr__file__pb2.CloseShiftResponse.SerializeToString,
            ),
            'AddStatistic': grpc.unary_unary_rpc_method_handler(
                    servicer.AddStatistic,
                    request_deserializer=pr__file__pb2.RequestAddStatistic.FromString,
                    response_serializer=pr__file__pb2.AddStatisticResponse.SerializeToString,
            ),
            'MakeComplaint': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeComplaint,
                    request_deserializer=pr__file__pb2.RequestMakeComplaint.FromString,
                    response_serializer=pr__file__pb2.complaintResponse.SerializeToString,
            ),
            'GetTable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTable,
                    request_deserializer=pr__file__pb2.RequestGetTable.FromString,
                    response_serializer=pr__file__pb2.GetTableResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cmd.ControllerApp', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ControllerApp(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Auth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/Auth',
            pr__file__pb2.authInfo.SerializeToString,
            pr__file__pb2.authInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFullInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/GetFullInfo',
            pr__file__pb2.RequestGetFullInfo.SerializeToString,
            pr__file__pb2.GetFullInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/GetInfo',
            pr__file__pb2.RequestGetInfo.SerializeToString,
            pr__file__pb2.GetInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddNewInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/AddNewInfo',
            pr__file__pb2.RequestAddNewInfo.SerializeToString,
            pr__file__pb2.AddNewInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/ChangeRoute',
            pr__file__pb2.RequestChangeRoute.SerializeToString,
            pr__file__pb2.ChangeRouteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenShift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/OpenShift',
            pr__file__pb2.RequestOpenShift.SerializeToString,
            pr__file__pb2.OpenShiftResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseShift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/CloseShift',
            pr__file__pb2.RequestCloseShift.SerializeToString,
            pr__file__pb2.CloseShiftResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddStatistic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/AddStatistic',
            pr__file__pb2.RequestAddStatistic.SerializeToString,
            pr__file__pb2.AddStatisticResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakeComplaint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/MakeComplaint',
            pr__file__pb2.RequestMakeComplaint.SerializeToString,
            pr__file__pb2.complaintResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.ControllerApp/GetTable',
            pr__file__pb2.RequestGetTable.SerializeToString,
            pr__file__pb2.GetTableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class EditorRegistryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNRowsRegistry = channel.unary_unary(
                '/cmd.EditorRegistry/GetNRowsRegistry',
                request_serializer=pr__file__pb2.RequestGetNRowsRegistry.SerializeToString,
                response_deserializer=pr__file__pb2.GetNRowsRegistryResponse.FromString,
                )
        self.RemoveRowRegistryTable = channel.unary_unary(
                '/cmd.EditorRegistry/RemoveRowRegistryTable',
                request_serializer=pr__file__pb2.RequestRemoveRegistry.SerializeToString,
                response_deserializer=pr__file__pb2.RegistryRemoveResponse.FromString,
                )
        self.EditRowRegistry = channel.unary_unary(
                '/cmd.EditorRegistry/EditRowRegistry',
                request_serializer=pr__file__pb2.RequestEditAddRowRegistry.SerializeToString,
                response_deserializer=pr__file__pb2.RegistryEditAddResponse.FromString,
                )
        self.AddRowRegistry = channel.unary_unary(
                '/cmd.EditorRegistry/AddRowRegistry',
                request_serializer=pr__file__pb2.RequestEditAddRowRegistry.SerializeToString,
                response_deserializer=pr__file__pb2.RegistryAddRowResponse.FromString,
                )
        self.FindBy = channel.unary_unary(
                '/cmd.EditorRegistry/FindBy',
                request_serializer=pr__file__pb2.RequestFindBySRegistry.SerializeToString,
                response_deserializer=pr__file__pb2.RegistryFindResponse.FromString,
                )
        self.GetNRowsUserGroups = channel.unary_unary(
                '/cmd.EditorRegistry/GetNRowsUserGroups',
                request_serializer=pr__file__pb2.RequestGetUserGroups.SerializeToString,
                response_deserializer=pr__file__pb2.GetNRowsUserGroupsResponse.FromString,
                )
        self.GetNRowsCategories = channel.unary_unary(
                '/cmd.EditorRegistry/GetNRowsCategories',
                request_serializer=pr__file__pb2.RequestGetNRowsCategories.SerializeToString,
                response_deserializer=pr__file__pb2.GetNRowsCategoriesResponse.FromString,
                )
        self.AddCategory = channel.unary_unary(
                '/cmd.EditorRegistry/AddCategory',
                request_serializer=pr__file__pb2.RequestAddCategory.SerializeToString,
                response_deserializer=pr__file__pb2.AddCategoryResponse.FromString,
                )
        self.RemoveCategory = channel.unary_unary(
                '/cmd.EditorRegistry/RemoveCategory',
                request_serializer=pr__file__pb2.RequestRemoveCategory.SerializeToString,
                response_deserializer=pr__file__pb2.RemoveCategoryResponse.FromString,
                )
        self.GetNRowsControllers = channel.unary_unary(
                '/cmd.EditorRegistry/GetNRowsControllers',
                request_serializer=pr__file__pb2.RequestGetNRowsControllers.SerializeToString,
                response_deserializer=pr__file__pb2.GetNRowsControllersResponse.FromString,
                )
        self.AddController = channel.unary_unary(
                '/cmd.EditorRegistry/AddController',
                request_serializer=pr__file__pb2.RequestAddController.SerializeToString,
                response_deserializer=pr__file__pb2.AddControllerResponse.FromString,
                )
        self.RemoveController = channel.unary_unary(
                '/cmd.EditorRegistry/RemoveController',
                request_serializer=pr__file__pb2.RequestRemoveController.SerializeToString,
                response_deserializer=pr__file__pb2.RemoveControllerResponse.FromString,
                )
        self.ChangeStatusController = channel.unary_unary(
                '/cmd.EditorRegistry/ChangeStatusController',
                request_serializer=pr__file__pb2.RequestChangeStatusController.SerializeToString,
                response_deserializer=pr__file__pb2.ChangeStatusControllerResponse.FromString,
                )
        self.Auth = channel.unary_unary(
                '/cmd.EditorRegistry/Auth',
                request_serializer=pr__file__pb2.authInfo.SerializeToString,
                response_deserializer=pr__file__pb2.authInfoResponse.FromString,
                )
        self.RegUser = channel.unary_unary(
                '/cmd.EditorRegistry/RegUser',
                request_serializer=pr__file__pb2.RequestRegUser.SerializeToString,
                response_deserializer=pr__file__pb2.RegUserResponse.FromString,
                )


class EditorRegistryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetNRowsRegistry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRowRegistryTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditRowRegistry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRowRegistry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindBy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNRowsUserGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNRowsCategories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNRowsControllers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddController(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveController(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeStatusController(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Auth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EditorRegistryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNRowsRegistry': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNRowsRegistry,
                    request_deserializer=pr__file__pb2.RequestGetNRowsRegistry.FromString,
                    response_serializer=pr__file__pb2.GetNRowsRegistryResponse.SerializeToString,
            ),
            'RemoveRowRegistryTable': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRowRegistryTable,
                    request_deserializer=pr__file__pb2.RequestRemoveRegistry.FromString,
                    response_serializer=pr__file__pb2.RegistryRemoveResponse.SerializeToString,
            ),
            'EditRowRegistry': grpc.unary_unary_rpc_method_handler(
                    servicer.EditRowRegistry,
                    request_deserializer=pr__file__pb2.RequestEditAddRowRegistry.FromString,
                    response_serializer=pr__file__pb2.RegistryEditAddResponse.SerializeToString,
            ),
            'AddRowRegistry': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRowRegistry,
                    request_deserializer=pr__file__pb2.RequestEditAddRowRegistry.FromString,
                    response_serializer=pr__file__pb2.RegistryAddRowResponse.SerializeToString,
            ),
            'FindBy': grpc.unary_unary_rpc_method_handler(
                    servicer.FindBy,
                    request_deserializer=pr__file__pb2.RequestFindBySRegistry.FromString,
                    response_serializer=pr__file__pb2.RegistryFindResponse.SerializeToString,
            ),
            'GetNRowsUserGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNRowsUserGroups,
                    request_deserializer=pr__file__pb2.RequestGetUserGroups.FromString,
                    response_serializer=pr__file__pb2.GetNRowsUserGroupsResponse.SerializeToString,
            ),
            'GetNRowsCategories': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNRowsCategories,
                    request_deserializer=pr__file__pb2.RequestGetNRowsCategories.FromString,
                    response_serializer=pr__file__pb2.GetNRowsCategoriesResponse.SerializeToString,
            ),
            'AddCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCategory,
                    request_deserializer=pr__file__pb2.RequestAddCategory.FromString,
                    response_serializer=pr__file__pb2.AddCategoryResponse.SerializeToString,
            ),
            'RemoveCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveCategory,
                    request_deserializer=pr__file__pb2.RequestRemoveCategory.FromString,
                    response_serializer=pr__file__pb2.RemoveCategoryResponse.SerializeToString,
            ),
            'GetNRowsControllers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNRowsControllers,
                    request_deserializer=pr__file__pb2.RequestGetNRowsControllers.FromString,
                    response_serializer=pr__file__pb2.GetNRowsControllersResponse.SerializeToString,
            ),
            'AddController': grpc.unary_unary_rpc_method_handler(
                    servicer.AddController,
                    request_deserializer=pr__file__pb2.RequestAddController.FromString,
                    response_serializer=pr__file__pb2.AddControllerResponse.SerializeToString,
            ),
            'RemoveController': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveController,
                    request_deserializer=pr__file__pb2.RequestRemoveController.FromString,
                    response_serializer=pr__file__pb2.RemoveControllerResponse.SerializeToString,
            ),
            'ChangeStatusController': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeStatusController,
                    request_deserializer=pr__file__pb2.RequestChangeStatusController.FromString,
                    response_serializer=pr__file__pb2.ChangeStatusControllerResponse.SerializeToString,
            ),
            'Auth': grpc.unary_unary_rpc_method_handler(
                    servicer.Auth,
                    request_deserializer=pr__file__pb2.authInfo.FromString,
                    response_serializer=pr__file__pb2.authInfoResponse.SerializeToString,
            ),
            'RegUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegUser,
                    request_deserializer=pr__file__pb2.RequestRegUser.FromString,
                    response_serializer=pr__file__pb2.RegUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cmd.EditorRegistry', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EditorRegistry(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetNRowsRegistry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/GetNRowsRegistry',
            pr__file__pb2.RequestGetNRowsRegistry.SerializeToString,
            pr__file__pb2.GetNRowsRegistryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveRowRegistryTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/RemoveRowRegistryTable',
            pr__file__pb2.RequestRemoveRegistry.SerializeToString,
            pr__file__pb2.RegistryRemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditRowRegistry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/EditRowRegistry',
            pr__file__pb2.RequestEditAddRowRegistry.SerializeToString,
            pr__file__pb2.RegistryEditAddResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRowRegistry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/AddRowRegistry',
            pr__file__pb2.RequestEditAddRowRegistry.SerializeToString,
            pr__file__pb2.RegistryAddRowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/FindBy',
            pr__file__pb2.RequestFindBySRegistry.SerializeToString,
            pr__file__pb2.RegistryFindResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNRowsUserGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/GetNRowsUserGroups',
            pr__file__pb2.RequestGetUserGroups.SerializeToString,
            pr__file__pb2.GetNRowsUserGroupsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNRowsCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/GetNRowsCategories',
            pr__file__pb2.RequestGetNRowsCategories.SerializeToString,
            pr__file__pb2.GetNRowsCategoriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/AddCategory',
            pr__file__pb2.RequestAddCategory.SerializeToString,
            pr__file__pb2.AddCategoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/RemoveCategory',
            pr__file__pb2.RequestRemoveCategory.SerializeToString,
            pr__file__pb2.RemoveCategoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNRowsControllers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/GetNRowsControllers',
            pr__file__pb2.RequestGetNRowsControllers.SerializeToString,
            pr__file__pb2.GetNRowsControllersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/AddController',
            pr__file__pb2.RequestAddController.SerializeToString,
            pr__file__pb2.AddControllerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/RemoveController',
            pr__file__pb2.RequestRemoveController.SerializeToString,
            pr__file__pb2.RemoveControllerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeStatusController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/ChangeStatusController',
            pr__file__pb2.RequestChangeStatusController.SerializeToString,
            pr__file__pb2.ChangeStatusControllerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Auth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/Auth',
            pr__file__pb2.authInfo.SerializeToString,
            pr__file__pb2.authInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cmd.EditorRegistry/RegUser',
            pr__file__pb2.RequestRegUser.SerializeToString,
            pr__file__pb2.RegUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
